<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>arapaima.uk </title>
    <link>http://arapaima.uk/tags/dacfx/</link>
    <language>en-us</language>
    <author>Gavin Campbell</author>
    <rights>(C) 2018</rights>
    <updated>2018-12-17 00:00:00 &#43;0000 UTC</updated>

    
      
        <item>
          <title>Filtering Dacpac deployments with DacFX and Powershell</title>
          <link>http://arapaima.uk/post/2018-12-17-filtering-dacpac-deployments-dacfx/</link>
          <pubDate>Mon, 17 Dec 2018 00:00:00 UTC</pubDate>
          <author>Gavin Campbell</author>
          <guid>http://arapaima.uk/post/2018-12-17-filtering-dacpac-deployments-dacfx/</guid>
          <description>&lt;p&gt;Prompted by some discussion on the &lt;a href=&#34;https://sqlps.io/slack/&#34;&gt;SQL Community Slack&lt;/a&gt;, I thought I&amp;rsquo;d revisit &lt;a href=&#34;https://blogs.msdn.microsoft.com/ssdt/2016/09/20/schema-compare-in-sqlpackage-and-the-data-tier-application-framework-dacfx/&#34;&gt;this old post&lt;/a&gt; on the SSDT Team Blog which outlines how to filter specific objects from a dacpac deployment using the &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/api/microsoft.sqlserver.dac.compare?view=sql-dacfx-140.3881.1&#34;&gt;Schema Compare API&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the past, I&amp;rsquo;ve used &lt;a href=&#34;https://the.agilesql.club/&#34;&gt;Ed Elliott&amp;rsquo;s&lt;/a&gt; &lt;a href=&#34;https://github.com/GoEddie/DeploymentContributorFilterer&#34;&gt;filtering deployment contributor&lt;/a&gt; for this kind of thing, but in the interest of experimentation I thought I&amp;rsquo;d have a look at what comes &amp;ldquo;in the box&amp;rdquo;, not least because deployment contributors can, ironically, be a bit of a pain to &lt;em&gt;deploy&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve created a &lt;a href=&#34;https://github.com/arapaima-uk/FilteringDemo/tree/master/FilteringDemo&#34;&gt;simple project&lt;/a&gt; you can use to play along at home, with two schemas, named &lt;code&gt;Production&lt;/code&gt; and &lt;code&gt;UnProduction&lt;/code&gt;, each containing a single table. I&amp;rsquo;ve also included a publish profile that can be used to publish the project to a local database called &amp;ldquo;Unfiltered&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;In this example, we&amp;rsquo;ll use the schema compare API to allow only the &lt;code&gt;Production&lt;/code&gt; schema and the table it contains to deployed.&lt;/p&gt;

&lt;p&gt;The action takes place in the powershell script &lt;a href=&#34;https://github.com/arapaima-uk/FilteringDemo/blob/master/FilteringDemo/FilteredDeploy.ps1&#34;&gt;Filtered Deploy.ps1&lt;/a&gt;, which I&amp;rsquo;ve reproduced in its entirety here:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$serverName&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$databaseName&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Filtered&amp;#39;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$schemaToInclude&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Production&amp;#39;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$dacFxDll&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;C:\Program Files (x86)\Microsoft SQL Server\140\DAC\bin\Microsoft.SqlServer.Dac.Extensions.dll&amp;#39;&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;$dacpacPath&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;$PSScriptRoot\bin\Debug\FilteringDemo.dacpac&amp;#34;&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;Add-Type&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Path&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$dacFxDll&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;$sourceDacpac&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;New-Object&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Microsoft&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SqlServer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Dac&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Compare&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SchemaCompareDacpacEndpoint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$dacpacPath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;$targetDatabase&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;New-Object&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Microsoft&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SqlServer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Dac&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Compare&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SchemaCompareDatabaseEndpoint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Data Source=$serverName;Initial Catalog=$databaseName;Integrated Security=True;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;$comparison&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;New-Object&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Microsoft&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SqlServer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Dac&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Compare&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SchemaComparison&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$sourceDacpac&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$targetDatabase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;$comparisonResult&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$comparison&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Compare&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;$comparisonResult&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Differences&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;%{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SourceObject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-ne&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$schemaToInclude&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
		&lt;span class=&#34;nb&#34;&gt;Write-Output&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Excluding Object &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SourceObject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
		&lt;span class=&#34;nv&#34;&gt;$comparisonResult&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Exclude&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Out-Null&lt;/span&gt;

	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;$publishResult&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$comparisonResult&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PublishChangesToTarget&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$publishResult&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Success&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
	&lt;span class=&#34;nb&#34;&gt;Write-Output&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Worky&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nb&#34;&gt;Write-Output&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;NoWorky&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Briefly, we load the dll that contains the classes we need to use, and set up a schema comparison between a source dacpac and a target database. There are two key pre-requisites for this, which are&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the dacpac must exist, meaning that the project must have been built&lt;/li&gt;
&lt;li&gt;the target database must exist, meaning that this script can&amp;rsquo;t be used for &amp;ldquo;first-time&amp;rdquo; deployment. &lt;em&gt;This is a departure from the &amp;ldquo;usual way&amp;rdquo; of working with SSDT, and IMV the biggest limitation of this approach.&lt;/em&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Moving on, we execute the comparison using &lt;code&gt;SchemaComparison.Compare()&lt;/code&gt;, then iterate the list of differences looking for source objects that match - or in this case don&amp;rsquo;t match - our filter.  This kind of thing is useful for excluding objects that only need to exist in dev and test environments.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s perfectly valid to do this comparison the other way around, examining objects in the target database - indeed this is what the C# snippet in the original blog post does. This would be useful if there were objects in your target database created by a third party outside of your deployment process that needed to be specifically excluded from consideration.&lt;/p&gt;

&lt;p&gt;Having excluded the relevant objects from the comparison results, we go ahead and deploy the changes with &lt;code&gt;PublishChangesToTarget()&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;p&#34;&gt;~\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;repos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FilteringDemo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FilteringDemo&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;master&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;≡&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FilteredDeploy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ps1&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Excluding&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;[UnProduction].[UnimportantStuff]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Excluding&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;[UnProduction]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Worky&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;~\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;repos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FilteringDemo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FilteringDemo&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;master&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;≡&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;https://s3-eu-west-1.amazonaws.com/aksidjenakfjg/dacpac-filtering/dbs.png&#34; alt=&#34;picture of the two databases&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This is a pretty simplistic example, it relies on the fact that both tables and schemas have the schema name in the first element of the &lt;code&gt;SourceObject.name.Parts[]&lt;/code&gt; collection, but more complex filtering criteria can be implemented with a bit of API speleology.&lt;/p&gt;
</description>
        </item>
      
    

  </channel>
</rss>
